{"version":3,"sources":["Components/AddCategory.js","helpers/getGif.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGif.js","Components/Welcome.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInput","className","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","toUpperCase","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","Welcome","GifExpertApp","categories","setCategory","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEbC,mBAAS,IAFI,mBAErCC,EAFqC,KAEzBC,EAFyB,KAe5C,OACI,sBAAKC,UAAU,uBAAf,UACI,mBAAGA,UAAY,mBAAf,uCAEA,sBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBACCL,EAAWM,OAAOC,OAAS,IAC1BT,GAAe,SAAAU,GAAI,OAAKR,GAAL,mBAAmBQ,OACtCP,EAAS,MAQT,SACI,uBACIC,UAAU,cACVO,KAAO,OACPC,MAAUV,EACVW,SApBI,SAACP,GACjBH,EAASG,EAAEQ,OAAOF,MAAMG,wB,+BCRnBC,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,0FAE6EC,UAAUH,GAFvF,sBAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAQF,EAAIE,MACZV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QAVzB,kBAaXM,GAbW,4CAAH,sDCENO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,sBAAKf,UAAU,yCAAf,UACI,qBAAK6B,IAAKd,EAAKe,IAAKL,IACpB,4BAAKA,QCHJM,EAAU,SAAC,GAAoB,IAAjBlB,EAAgB,EAAhBA,SAAgB,ECDhB,SAAEA,GAAe,IAAD,EACdhB,mBAAU,CAC/BuB,KAAM,GACNY,SAAS,IAH0B,mBAChCC,EADgC,KAC1BC,EAD0B,KAuBvC,OAjBAC,qBAAW,WACPvB,EAAQC,GACHuB,MAAM,SAAAC,GAEHH,EAAU,CACNd,KAAMiB,EACNL,SAAS,SAGtB,CAAEnB,IAQEoB,EDnB2BK,CAAYzB,GAA/Ba,EAHwB,EAG/BN,KAAeY,EAHgB,EAGhBA,QAEvB,OACI,sBAAKhC,UAAY,mBAAjB,UACI,oBAAGA,UAAY,iBAAf,cAAoCa,KAClCmB,GAAY,mBAAGhC,UAAU,mCAAb,2BAEd,qBAAKA,UAAU,8CAAf,SAEQ0B,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADGA,EAAIC,aEhB1Be,EAAU,WACnB,OACI,qBAAKvC,UAAY,oBAAjB,SACI,sBAAKA,UAAY,gBAAjB,UACI,6CACA,6BC+BDwC,EAhCM,WAAM,IAAD,EAEW3C,mBAAS,CAAC,aAFrB,mBAEf4C,EAFe,KAEJC,EAFI,KAStB,OACI,qCACA,cAAC,EAAD,IAEA,cAAC,EAAD,CAAa9C,cAAiB8C,IAGtBD,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CACIA,SAAYA,GACLA,U,MCjB/B8B,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e3be1f17.chunk.js","sourcesContent":["import  React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories} ) =>{\r\n\r\n    const [inputValue, setInput] = useState('');\r\n\r\n    const handleEvent = (e) =>{\r\n        setInput(e.target.value.toUpperCase());\r\n    }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue,...cats]);\r\n            setInput('');\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <div className=\"add_category_content\">\r\n            <p className = \"category_message\"> Agrega una categor√≠a:</p>\r\n\r\n            <form onSubmit = { handleSubmit}>\r\n                <input \r\n                    className=\"input_class\"\r\n                    type = \"text\"\r\n                    value = { inputValue}\r\n                    onChange={handleEvent}\r\n                />\r\n            </form>\r\n\r\n\r\n        </div>\r\n    )\r\n    \r\n}\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n};","export const getGif = async (category) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=QLx0vFFVRWghPCxh0NZ64c6ktzgWW5z4&q=${encodeURI(category)}&limit=12`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title : img.title,\r\n            url : img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return(gifs);\r\n} \r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGif } from '../hooks/useFetchGif'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n   \r\n    const { data : images ,loading }= useFetchGif(category);\r\n    \r\n    return (\r\n        <div className = \"category-content\">\r\n            <p className = \"category-title\" > { category }</p> \r\n            { loading  && <p className=\"animate__animated animate__flash\" >Cargando ... </p>  }\r\n    \r\n            <div className=\"card-grid animate__animated animate__fadeIn\">\r\n                {\r\n                    images.map( img =>\r\n                        <GifGridItem \r\n                            key = {img.id}\r\n                            {...img} \r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGif } from '../helpers/getGif';\r\n\r\nexport const useFetchGif = ( category ) => {\r\n    const [state,setState] = useState ({\r\n        data: [],\r\n        loading: true\r\n    });    \r\n\r\n    useEffect( () => {\r\n        getGif( category )\r\n            .then( imgs => {\r\n\r\n                setState ({\r\n                    data: imgs,\r\n                    loading: false\r\n                }); \r\n            })\r\n    }, [ category ])\r\n\r\n    // setTimeout(() => {\r\n    //     setState({\r\n    //         data : [1,2,3,4,5],\r\n    //         loading : false\r\n    //     })\r\n    // }, 3000);\r\n    return state ; // { data : [], loading: true}\r\n}","import React from 'react'\r\n\r\nexport const Welcome = () => {\r\n    return (\r\n        <div className = \"welcome-component\">\r\n            <div className = \"first-content\">\r\n                <p>Gif Ocio App</p>\r\n                <hr></hr>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {AddCategory} from './Components/AddCategory';\r\nimport {GifGrid} from './Components/GifGrid';\r\nimport { Welcome } from './Components/Welcome';\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    const [categories,setCategory] = useState(['ABURRIDO']);\r\n/*\r\n    const handleAdd= () =>{\r\n        setCategory(['Hunter X Hunter',...categories]);\r\n        setCategories( cats => [...cats,'HunterXHunters']);\r\n    }\r\n*/\r\n    return (\r\n        <>\r\n        <Welcome/>\r\n\r\n        <AddCategory setCategories = {setCategory}/>\r\n        \r\n        {\r\n                categories.map( category => \r\n                    <GifGrid \r\n                        category = {category}\r\n                        key = {category}                    \r\n                    />\r\n                )\r\n            }\r\n        </>\r\n     \r\n    );\r\n}\r\n\r\nGifExpertApp.propTypes = {\r\n    value : PropTypes.number\r\n};\r\n\r\nexport default GifExpertApp;\r\n//GifExpertApp\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\n\n\nimport './index.css';\n\nReactDOM.render(\n  \n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}